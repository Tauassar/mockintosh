version: '3.8'

services:
  # Mockintosh service
  mockintosh:
    build:
      context: ../..
      dockerfile: docker/local/Dockerfile
    ports:
      - "8000:8000"  # Main service port
      - "8001:8001"  # Management UI port
    volumes:
      - ../../configs:/app/configs:ro
      - ../../data:/app/data
      - ../../logs:/app/logs
      - ../../mockintosh:/app/mockintosh
    environment:
      - MOCKINTOSH_DEBUG=true
      - MOCKINTOSH_DATA_DIR=/app/data
      - PYTHONPATH=/app
    command: ["mockintosh", "-c", "/app/configs/config.yaml"]
    networks:
      - mockintosh-network
    depends_on:
      - kafka
      - redis
      - rabbitmq
    profiles:
      - full

  # Mockintosh service (minimal - no external dependencies)
  mockintosh-minimal:
    build:
      context: ../..
      dockerfile: docker/local/Dockerfile
    ports:
      - "8000:8000"  # Main service port
      - "8001:8001"  # Management UI port
    volumes:
      - ../../configs:/app/configs:ro
      - ../../data:/app/data
      - ../../logs:/app/logs
      - ../../mockintosh:/app/mockintosh
    environment:
      - MOCKINTOSH_DEBUG=true
      - MOCKINTOSH_DATA_DIR=/app/data
      - PYTHONPATH=/app
    command: ["mockintosh", "-c", "/app/configs/config.yaml"]
    networks:
      - mockintosh-network

  # Kafka service for async messaging
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - mockintosh-network
    profiles:
      - full

  # Redis service for caching and messaging
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - mockintosh-network
    profiles:
      - full

  # RabbitMQ service for AMQP messaging
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - mockintosh-network
    profiles:
      - full

  # MQTT broker for IoT messaging
  mqtt:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"   # MQTT port
      - "9001:9001"   # WebSocket port
    volumes:
      - ../../mosquitto/config:/mosquitto/config
      - ../../mosquitto/data:/mosquitto/data
      - ../../mosquitto/log:/mosquitto/log
    networks:
      - mockintosh-network
    profiles:
      - full

  # ElasticMQ for Amazon SQS compatibility
  elasticmq:
    image: softwaremill/elasticmq-native:1.4.1
    ports:
      - "9324:9324"   # REST API port
      - "9325:9325"   # SQS port
    volumes:
      - ../../elasticmq/elasticmq.conf:/opt/elasticmq.conf
    networks:
      - mockintosh-network
    profiles:
      - full

volumes:
  redis-data:
  rabbitmq-data:

networks:
  mockintosh-network:
    driver: bridge
